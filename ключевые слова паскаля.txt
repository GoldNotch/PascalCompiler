begin_of_expression = {+|-}<имя>|<константа>|( - можно только за один токен от выражения (:=)
end_of_expression = then|do|of|;|to|downto|end - можно из любого места выражения
begin_of_operator = <имя>|goto|begin|if|case|while|repeat|for|with - можно только когда ; или begin не правильны
end_of_operator = ;|end - 



) -> +|-|*|/|div|mod|and|or|then|do|of|;|to|downto|end
.. -> <целая константа>

and -> <множитель> = {+|-}<имя>|<константа>|(
div -> <множитель> = {+|-}<имя>|<константа>|(
mod -> <множитель> = {+|-}<имя>|<константа>|(
not -> <множитель> = {+|-}<имя>|<константа>|(
* -> <множитель> = {+|-}<имя>|<константа>|(
/ -> <множитель> = {+|-}<имя>|<константа>|(
+ -> <слагаемое> = <множитель> = {+|-}<имя>|<константа>|(
- -> <слагаемое> = <множитель> = {+|-}<имя>|<константа>|(
or -> <слагаемое> = <множитель> = {+|-}<имя>|<константа>|(
= -> <простое выражение> = <слагаемое> = <множитель> = {+|-}<имя>|<константа>|(
> -> <простое выражение> = <слагаемое> = <множитель> = {+|-}<имя>|<константа>|(
< -> <простое выражение> = <слагаемое> = <множитель> = {+|-}<имя>|<константа>|(
<> -> <простое выражение> = <слагаемое> = <множитель> = {+|-}<имя>|<константа>|(
<= -> <простое выражение> = <слагаемое> = <множитель> = {+|-}<имя>|<константа>|(
>= -> <простое выражение> = <слагаемое> = <множитель> = {+|-}<имя>|<константа>|(
:= -> <простое выражение> = <слагаемое> = <множитель> = {+|-}<имя>|<константа>|(
if -> <выражение> = <простое выражение> = <слагаемое> = <множитель> = {+|-}<имя>|<константа>|(
downto -> <выражение> = <простое выражение> = <слагаемое> = <множитель> = {+|-}<имя>|<константа>|(
( -> <выражение> = <простое выражение> = <слагаемое> = <множитель> = {+|-}<имя>|<константа>|(
to -> <выражение> = <простое выражение> = <слагаемое> = <множитель> = {+|-}<имя>|<константа>|(
until -> <выражение> = <простое выражение> = <слагаемое> = <множитель> = {+|-}<имя>|<константа>|(
while -> <выражение> = <простое выражение> = <слагаемое> = <множитель> = {+|-}<имя>|<константа>|(

begin -> <оператор>|end = <имя>|goto|begin|if|case|while|repeat|for|with|end
do -> <оператор>|;|end = <имя>|goto|begin|if|case|while|repeat|for|with|;|end
else -> <оператор>|;|end = <имя>|goto|begin|if|case|while|repeat|for|with|;|end
repeat -> <оператор>|until = <имя>|goto|begin|if|case|while|repeat|for|with|until
then -> <оператор>|;|else|end = <имя>|goto|begin|if|case|while|repeat|for|with|;|else|end

var .... ; -> <имя>|begin
type .... ; -> <имя>|var|begin
program .... ; -> type|var|begin
<оператор>; -> <оператор>|end = <имя>|goto|begin|if|case|while|repeat|for|with|end
end -> ;|end|.
program -> <имя>
type -> <имя>
var -> <имя>
with -> <имя>
const -> <имя>
for -> <имя>
, -> <имя>
: -> <имя>
record -> <имя>|end
. -> <имя>|eof

file
function
goto
in
label
nil
of
packed
procedure
set
[
]
^
array
case