    %include "io.inc"
section .data
False_0 DB 0
True_0 DB 1
readln_0 DD 1
writeln_0 DD 0

section .bss
a_1 RESD 1
b_1 RESD 1
c_1 RESD 1
d_1 RESB 1
e_1 RESB 1
f_1 RESB 1
g_1 RESB 1
h_1 RESB 1
i_1 RESB 1


section .text
	global CMAIN
CMAIN:
MOV EBP, ESP
GET_DEC 4, a_1
GET_DEC 4, b_1
MOV EAX, [a_1]
PUSH EAX
MOV EAX, [b_1]
PUSH EAX
POP EDX
POP EAX
CMP EAX, EDX
LAHF
SHR EAX, 14
AND EAX, 1
PUSH EAX
POP EAX
MOV [d_1], EAX
MOV EAX, [a_1]
PUSH EAX
MOV EAX, [b_1]
PUSH EAX
POP EDX
POP EAX
CMP EAX, EDX
LAHF
SHR EAX, 14
NOT EAX
AND EAX, 1
PUSH EAX
POP EAX
MOV [e_1], EAX
MOV EAX, [a_1]
PUSH EAX
MOV EAX, [b_1]
PUSH EAX
POP EDX
POP EAX
CMP EAX, EDX
LAHF
SHR EAX, 14
AND EAX, 3
MOV EDX, EAX
SHR EAX, 1
AND EDX, 1
NOT EDX
AND EAX, EDX
PUSH EAX
POP EAX
MOV [f_1], EAX
MOV EAX, [a_1]
PUSH EAX
MOV EAX, [b_1]
PUSH EAX
POP EDX
POP EAX
CMP EAX, EDX
LAHF
SHR EAX, 14
NOT EAX
AND EAX, 3
MOV EDX, EAX
SHR EAX, 1
AND EDX, 1
AND EAX, EDX
PUSH EAX
POP EAX
MOV [g_1], EAX
MOV EAX, [a_1]
PUSH EAX
MOV EAX, [b_1]
PUSH EAX
POP EDX
POP EAX
CMP EAX, EDX
LAHF
SHR EAX, 14
AND EAX, 3
MOV EDX, EAX
SHR EAX, 1
AND EDX, 1
OR EAX, EDX
PUSH EAX
POP EAX
MOV [h_1], EAX
MOV EAX, [a_1]
PUSH EAX
MOV EAX, [b_1]
PUSH EAX
POP EDX
POP EAX
CMP EAX, EDX
LAHF
SHR EAX, 14
AND EAX, 3
MOV EDX, EAX
NOT EAX
SHR EAX, 1
AND EAX, 1
AND EDX, 1
OR EAX, EDX
PUSH EAX
POP EAX
MOV [i_1], EAX
PRINT_DEC 1, d_1
PRINT_CHAR ' '
PRINT_DEC 1, e_1
PRINT_CHAR ' '
NEWLINE
PRINT_DEC 1, f_1
PRINT_CHAR ' '
PRINT_DEC 1, g_1
PRINT_CHAR ' '
NEWLINE
PRINT_DEC 1, h_1
PRINT_CHAR ' '
PRINT_DEC 1, i_1
PRINT_CHAR ' '
NEWLINE
push 0
POP EAX
MOV [c_1], EAX
MOV EAX, [a_1]
PUSH EAX
MOV EAX, [b_1]
PUSH EAX
POP EDX
POP EAX
CMP EAX, EDX
LAHF
SHR EAX, 14
AND EAX, 3
MOV EDX, EAX
SHR EAX, 1
AND EDX, 1
NOT EDX
AND EAX, EDX
PUSH EAX
MOV EAX, [True_0]
PUSH EAX
POP EDX
POP EAX
OR EAX, EDX
AND EAX, 1
PUSH EAX
JMP check_cond_2
lbl_3:
MOV EAX, [a_1]
PUSH EAX
MOV EAX, [b_1]
PUSH EAX
POP EDX
POP EAX
ADD EAX, EDX
PUSH EAX
MOV EAX, [a_1]
PUSH EAX
MOV EAX, [b_1]
PUSH EAX
POP EDX
POP EAX
SUB EAX, EDX
PUSH EAX
POP EBX
POP EAX
CDQ
IDIV EBX
PUSH EAX
MOV EAX, [a_1]
PUSH EAX
MOV EAX, [b_1]
PUSH EAX
POP EDX
POP EAX
SUB EAX, EDX
PUSH EAX
POP EBX
POP EAX
CDQ
IDIV EBX
PUSH EAX
MOV EAX, [a_1]
PUSH EAX
POP EDX
POP EAX
ADD EAX, EDX
PUSH EAX
MOV EAX, [b_1]
PUSH EAX
POP EDX
POP EAX
ADD EAX, EDX
PUSH EAX
POP EAX
MOV [c_1], EAX
JMP continue_1
check_cond_2:
POP EAX
CMP EAX, 1
JE lbl_3
continue_1:
PRINT_DEC 4, c_1
PRINT_CHAR ' '
NEWLINE
begin_loop_4:
MOV EAX, [a_1]
PUSH EAX
MOV EAX, [b_1]
PUSH EAX
POP EDX
POP EAX
CMP EAX, EDX
LAHF
SHR EAX, 14
AND EAX, 3
MOV EDX, EAX
SHR EAX, 1
AND EDX, 1
NOT EDX
AND EAX, EDX
PUSH EAX
JMP check_cond_5
lbl_6:
MOV EAX, [a_1]
PUSH EAX
push 1
POP EDX
POP EAX
ADD EAX, EDX
PUSH EAX
POP EAX
MOV [a_1], EAX
PRINT_DEC 4, a_1
PRINT_CHAR ' '
NEWLINE
JMP begin_loop_4
check_cond_5:
POP EAX
CMP EAX, 1
JE lbl_6
xor eax, eax
ret

